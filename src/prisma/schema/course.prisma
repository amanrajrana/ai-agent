model Course {
    id          CourseType @id
    name        String     @unique
    duration    Int // in years
    semester    Int // number of semesters
    degreeType  DegreeType
    description String?
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    // Relations
    subjects         Subject[]
    AdmissionProcess AdmissionProcess[]
    FeeStructure     FeeStructure[]

    @@map("courses")
}

model Subject {
    id          Int       @id @default(autoincrement())
    name        String    @unique
    code        String    @unique
    description String?
    credits     Int
    marks       Int
    paperType   PaperType
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    textBook    String[]

    // Relations
    course         Course           @relation(fields: [courseId], references: [id])
    courseId       CourseType
    Unit           Unit[]
    FacultySubject FacultySubject[]

    @@map("subjects")
}

model Unit {
    id        Int     @id @default(autoincrement())
    number    Int
    title     String
    content   String
    // Relations
    subject   Subject @relation(fields: [subjectId], references: [id])
    subjectId Int
}

model AdmissionProcess {
    courseId     CourseType @id
    course       Course     @relation(fields: [courseId], references: [id])
    description  String
    requirements String[] // array of requirements
    eligibility  String
    processSteps String[] // array of steps in the admission process
    createdAt    DateTime   @default(now())
    updatedAt    DateTime?  @updatedAt

    @@map("admission_processes")
}

model FeeStructure {
    id       Int        @id @default(autoincrement())
    courseId CourseType
    course   Course     @relation(fields: [courseId], references: [id])
    semester Int // semester number
    amount   Float
 
    @@unique([courseId, semester])
    @@map("fee_structures")
}
